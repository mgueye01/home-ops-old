---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret
        containers:
          main:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.5.0@sha256:f0f5d92cd6c6dca9415993cfc57919f0618e87090b323a98c1536975860fa45a
            env:
              TZ: Europe/Paris
              LLDAP_HTTP_PORT: &port 8080
              LLDAP_HTTP_URL: https://lldap.g-eye.io
              LLDAP_LDAP_PORT: &ldapPort 1389
              LLDAP_LDAP_BASE_DN: dc=home,dc=arpa
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
        pod:
          # securityContext:
          #   runAsUser: 568
          #   runAsGroup: 568
          #   runAsNonRoot: true
          #   fsGroup: 568
          #   fsGroupChangePolicy: OnRootMismatch
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        ports:
          http:
            port: *port
          ldap:
            port: *ldapPort
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          ingress.home.arpa/type: "internal"
        hosts:
          - host: &host "{{ .Release.Name }}.g-eye.io"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        type: emptyDir
