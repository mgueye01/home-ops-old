---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.2"
            envFrom:
              - secretRef:
                  name: paperless-secret

        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.5.3
            env:
              PAPERLESS_CONSUMER_POLLING: 5
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: fra+eng
              PAPERLESS_PORT: &port 80
              PAPERLESS_REDIS: redis://redis.database.svc.cluster.local:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIME_ZONE: Europe/Paris
              PAPERLESS_URL: https://paperless.g-eye.io
              USERMAP_UID: 568
              USERMAP_GID: 568
            envFrom:
              - secretRef:
                  name: paperless-secret
          gotenberg:
            image:
              repository: gotenberg/gotenberg
              tag: 8.1.0
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 3000
            command:
              - "gotenberg"
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 9998
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.g-eye?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host "{{ .Release.Name }}.g-eye.io"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      library:
        enabled: true
        existingClaim: paperless-nfs
        mountPath: /library
    resources:
      requests:
        cpu: 100m
        memory: 1000Mi
      limits:
        memory: 5000Mi
