---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app miniflux
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: miniflux-secret
        containers:
          main:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.1.1-distroless@sha256:b6f29f068aa59e6f3df42065a56f040606333a7704746c6820b51dbaf2d9797a
            env:
              BASE_URL: https://miniflux.g-eye.io
              CREATE_ADMIN: "1"
              # DEBUG: "1"
              LOG_DATE_TIME: "1"
              METRICS_ALLOWED_NETWORKS: "192.168.0.0/16, 10.244.0.0/16"
              METRICS_COLLECTOR: "1"
              OAUTH2_CLIENT_ID: miniflux
              OAUTH2_USER_CREATION: "1"
              OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.g-eye.io
              OAUTH2_PROVIDER: oidc
              OAUTH2_REDIRECT_URL: https://miniflux.g-eye.io/oauth2/oidc/callback
              POLLING_SCHEDULER: entry_frequency
              POLLING_FREQUENCY: "15"
              PORT: &port 80
              RUN_MIGRATIONS: "1"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        ports:
          http:
            port: *port
    serviceMonitor:
      main:
        enabled: true
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.g-eye.io
        hosts:
          - host: &host "{{ .Release.Name }}.g-eye.io"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
