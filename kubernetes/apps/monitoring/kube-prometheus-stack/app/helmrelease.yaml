---
# yaml-language-server: $schema=https://kubernetes-schemas.g-eye.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 48.1.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
    force: true
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - token: "${SECRET_PUSHOVER_ALERT_MANAGER_APIKEY}"
                user_key: "${SECRET_PUSHOVER_USERKEY}"
                send_resolved: true
                html: true
                sound: gamelan
                priority: |-
                  {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
                url_title: View in Alert Manager
                title: |-
                  [{{ .Status | toUpper -}}
                  {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ] {{ .CommonLabels.alertname }}
                message: |-
                  {{- range .Alerts }}
                    {{- if ne .Labels.severity "" }}
                      <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                    {{- else }}
                      <b>Severity:</b> <i>N/A</i>
                    {{- end }}
                    {{- if ne .Annotations.description "" }}
                      <b>Description:</b> <i>{{ .Annotations.description }}</i>
                    {{- else if ne .Annotations.summary "" }}
                      <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                    {{- else if ne .Annotations.message "" }}
                      <b>Message:</b> <i>{{ .Annotations.message }}</i>
                    {{- else }}
                      <b>Description:</b> <i>N/A</i>
                    {{- end }}
                    {{- if gt (len .Labels.SortedPairs) 0 }}
                      <b>Details:</b>
                      {{- range .Labels.SortedPairs }}
                        â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                      {{- end }}
                    {{- end }}
                  {{- end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 1m
          group_interval: 2m
          repeat_interval: 120m
          receiver: "pushover"
          routes:
            # - receiver: "robusta"
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog|CPUThrottlingHigh"
            - receiver: "pushover"
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          # nginx.ingress.kubernetes.io/auth-url: "http://authelia.networking.svc.cluster.local/api/verify"
          # nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_DOMAIN}"
          # auth.home.arpa/enabled: "true"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          # external-dns/is-public: "true"
          ingress.home.arpa/type: "external-auth"
        hosts:
          - &host "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        podAntiAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 1Gi
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
        - "deployments=[*]"
        - "pods=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      # collectors:
      #   - verticalpodautoscalers
      #   - certificatesigningrequests
      #   - configmaps
      #   - cronjobs
      #   - daemonsets
      #   - deployments
      #   - endpoints
      #   - horizontalpodautoscalers
      #   - ingresses
      #   - jobs
      #   - limitranges
      #   - mutatingwebhookconfigurations
      #   - namespaces
      #   - networkpolicies
      #   - nodes
      #   - persistentvolumeclaims
      #   - persistentvolumes
      #   - poddisruptionbudgets
      #   - pods
      #   - replicasets
      #   - replicationcontrollers
      #   - resourcequotas
      #   - secrets
      #   - services
      #   - statefulsets
      #   - storageclasses
      #   - validatingwebhookconfigurations
      #   - volumeattachments
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)"
            action: keep
          - sourceLabels: ["node"]
            targetLabel: instance
            action: replace
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)"
            action: keep
          # Remove high cardinality metrics
          - sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
            action: drop
          - sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
            action: drop
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.10.11
        - 192.168.10.12
        - 192.168.10.13
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"
            action: keep
    kubeEtcd:
      enabled: true
      endpoints: *cp
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubeProxy:
      enabled: false # Disabled because eBPF
      endpoints: *cp
    kubeScheduler:
      enabled: true
      endpoints: *cp
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate metrics
          - sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"
            action: keep
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          # auth.home.arpa/enabled: "true"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          # external-dns/is-public: "false"
          ingress.home.arpa/type: "external-auth"
        hosts:
          - &host "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      # thanosIngress:
      #   enabled: true
      #   pathType: Prefix
      #   ingressClassName: "nginx"
      #   annotations:
      #     nginx.ingress.kubernetes.io/ssl-redirect: "true"
      #     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      #     external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      #     external-dns/is-public: "true"
      #   hosts:
      #     - &host "thanos-sidecar.${SECRET_DOMAIN}"
      #   tls:
      #     - hosts:
      #         - *host
      prometheusSpec:
        externalLabels:
          cluster: home-ops
        replicas: 1
        replicaExternalLabelName: __replica__ # must match with thanos value `.query.replicaLabel[0]`
        podAntiAffinity: hard
        retentionSize: "6GB"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 2d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 20Gi
        thanos:
          image: quay.io/thanos/thanos:v0.31.0
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml

        resources:
          requests:
            cpu: 200m
            memory: 3000Mi
          limits:
            memory: 6000Mi
        additionalScrapeConfigs:
          - honor_timestamps: true
            job_name: minio-nas
            metrics_path: /minio/v2/metrics/cluster
            scheme: http
            bearer_token: ${SECRET_MINIO_TOKEN}
            static_configs:
              - targets:
                  - "192.168.0.18:9000"
          - job_name: "snmp-exporter"
            static_configs:
              - targets: ["192.168.0.18"]
            metrics_path: /snmp
            params:
              module: [synology]
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: 192.168.0.18:9116 # The SNMP exporter's real hostname:port.
          - job_name: pikvm
            metrics_path: /api/export/prometheus/metrics
            scheme: https
            tls_config:
              insecure_skip_verify: true
            basic_auth:
              username: admin
              password: ${SECRET_PIKVM_PWD}
            static_configs:
              - targets: ["pikvm.g-eye.tech"]
          - job_name: environment
            static_configs:
              - targets: ['enviro.g-eye.tech:8000']
                labels:
                  group: 'environment'
                  location: 'Office'
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      extraArgs:
        - "--collector.textfile.directory=/var/lib/node_exporter/textfile_collector"
        - "--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)"
        - "--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
      extraHostVolumeMounts:
        - name: textfiles
          hostPath: /var/lib/node_exporter/textfile_collector
          mountPath: /var/lib/node_exporter/textfile_collector
          readOnly: false
          mountPropagation: HostToContainer
    prometheusOperator:
      configReloaderCpu: 0
