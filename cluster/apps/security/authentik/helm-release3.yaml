---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 5.1.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2021.10.4

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      hosts:
        - host: id.${SECRET_DOMAIN}
          paths:
            - path: /

      tls:
        - hosts:
            - id.${SECRET_DOMAIN}

    geoip:
      enabled: false
    authentik:
      email:
        host: smtp.mailgun.com
        port: 465
        username: ${SECRET_EMAIL}
        password: ${SECRET_MAILGUN_PASSWORD}
        use_ssl: true
        from: id@${SECRET_DOMAIN}
      secret_key: ${SECRET_AUTHENTIK_SECRET_KEY}
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: "postgresql.database"
        name: authentik
        user: authentik
        password: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}
      redis:
        host: "redis-master.database"
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}

    postgresql:
      enabled: false
      persistence:
        enabled: true
        existingClaim: authentik-postgresql

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}

    redis:
      enabled: false
      auth:
        enabled: true
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}
