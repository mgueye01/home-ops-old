---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  releaseName: plex
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: plex
      version: 6.3.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    # Values link: https://github.com/k8s-at-home/charts/blob/master/charts/stable/plex/values.yaml
    image:
      repository: ghcr.io/k8s-at-home/plex
      tag: v1.26.0.5715-8cf78dab3
    controller:
      strategy: Recreate
    podAnnotations:
      backup.velero.io/backup-volumes: config
    env:
      TZ: "${TIMEZONE}"
      ADVERTISE_IP: "https://plex.${SECRET_DOMAIN}:443/,http://${SVC_PLEX_ADDR}:32400/"
      PLEX_CLAIM: "${SECRET_PLEX_TOKEN}"
      # ALLOWED_NETWORKS: "10.0.0.0/8,10.43.0.0/16,10.42.0.0/16,172.16.0.0/12,192.168.0.0/24"
      PLEX_PREFERENCE_1: "FriendlyName=k8s-plex"
      # PLEX_PREFERENCE_2: "DisableTLSv1_0=1"
      # PLEX_PREFERENCE_3: "TranscoderQuality=2"
      # PLEX_PREFERENCE_4: "TreatWanIpAsLocal=0"
      # PLEX_PREFERENCE_5: "TranscoderH264BackgroundPreset=fast"

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      supplementalGroups:
        - 44
        - 109
        - 100
        - 65539
    service:
      main:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${SVC_PLEX_ADDR}
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: plex

    # hostNetwork: true

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "plex.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/ttl: "120"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            send_timeout 100m;
            gzip on;
            gzip_vary on;
            gzip_min_length 1000;
            gzip_proxied any;
            gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
            gzip_disable "MSIE [1-6]\.";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: plex-tls
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1

      transcode:
        enabled: true
        type: emptyDir

      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/video
        mountPath: /data
        readOnly: false

      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/CLOUDNATIVE1/Backups/plex
        mountPath: /config/backup
        readOnly: false

    resources:
      requests:
        cpu: 40m
        memory: 2000Mi
        gpu.intel.com/i915: 1
      limits:
        memory: 10000Mi
        gpu.intel.com/i915: 1
    addons:
      promtail:
        enabled: true
        image:
          repository: grafana/promtail
          tag: 2.5.0
        loki: http://loki.monitoring:3100/loki/api/v1/push
        logs:
          - name: promtail/plex
            path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
          - name: promtail/plex/plugins
            path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
        securityContext:
          runAsUser: 0
