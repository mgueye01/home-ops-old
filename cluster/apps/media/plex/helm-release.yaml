---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  releaseName: plex
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    initContainers:
      update-volume-permission:
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /config"]
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          runAsUser: 0
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.28.2.6151-914ddd2b3@sha256:0b1c10bda8403bb984eb8ae77ec19dd5abdaacc57e2ec42be4316f9dafec6977
    controller:
      strategy: Recreate
    env:
      TZ: "${TIMEZONE}"
      ADVERTISE_IP: "https://plex.${SECRET_DOMAIN}:443/,http://${SVC_PLEX_ADDR}:32400/"
      PLEX_CLAIM: "${SECRET_PLEX_TOKEN}"
      PLEX_PREFERENCE_1: "FriendlyName=k8s-plex"
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
        - 65539
    service:
      main:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${SVC_PLEX_ADDR}
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: plex

    # hostNetwork: true

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            # secretName: plex-tls
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1

      transcode:
        enabled: true
        type: emptyDir

      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/video
        mountPath: /data
        readOnly: false

      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/CLOUDNATIVE1/Backups/plex
        mountPath: /config/backup
        readOnly: false

    resources:
      requests:
        cpu: 20m
        memory: 200Mi
        gpu.intel.com/i915: 1
      limits:
        memory: 1000Mi
        gpu.intel.com/i915: 1

    # addons:
    #   promtail:
    #     enabled: true
    #     image:
    #       repository: grafana/promtail
    #       tag: 2.5.0
    #     loki: http://loki.monitoring:3100/loki/api/v1/push
    #     logs:
    #       - name: promtail/plex
    #         path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
    #       - name: promtail/plex/plugins
    #         path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #         readOnly: true
    #     securityContext:
    #       runAsUser: 0
